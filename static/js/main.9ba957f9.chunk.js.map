{"version":3,"sources":["Components/ContactForm/ContactForm.styled.js","Components/ContactForm/ContactForm.js","Components/Contact/Contact.styled.js","Components/Contact/Contact.js","Components/ContactList/ContactList.styled.js","Components/ContactList/ContactList.js","Components/Filter/FilterValue.styled.js","Components/Filter/FilterValue.js","Components/Filter/findContactsItem.js","Components/Filter/filterContacts.js","App.styled.js","App.js","index.js"],"names":["FormBlock","styled","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","disabled","handleChange","e","target","value","setState","handleSubmit","preventDefault","setTimeout","props","onAddContact","resetForm","this","onSubmit","type","onChange","autoComplete","Component","ContactBlock","div","ContactName","span","ContactNumber","ContactButtonDelete","Contact","onDeleteContact","onClick","List","ul","Item","li","ContactList","items","length","map","item","key","id","FilterBlock","FilterValue","onChangeFilter","findContactsItem","contacts","contact","find","filterContacts","filter","toLowerCase","includes","AppBlock","AppMainTitle","h1","AppTitle","h2","App","changeFilter","addContact","contactToAdd","uuidv4","isValidContact","alert","trim","match","deleteContact","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ba957f9.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const FormBlock = styled.form`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  line-height: 1.2;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  margin-bottom: 15px;\r\n  padding: 8px 5px;\r\n  border-radius: 2px;\r\n  border: 3px solid rgb(120, 120, 120);\r\n\r\n  :focus {\r\n    border-color: rgb(0, 106, 177);\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: block;\r\n  width: 100px;\r\n  padding: 10px 5px;\r\n  font-family: sans-serif;\r\n  font-size: 14px;\r\n  line-height: 1.2;\r\n  font-weight: 400;\r\n  color: #fff;\r\n  background-color: rgb(0, 106, 177);\r\n  border: none;\r\n  border-radius: 4px;\r\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\r\n  transition: all 0.2s ease-in;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: rgb(19, 19, 138);\r\n  }\r\n\r\n  :disabled {\r\n    background-color: rgb(85, 85, 85);\r\n    cursor: default;\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormBlock, Label, Input, Button } from './ContactForm.styled';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    disabled: false,\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    this.setState({ disabled: true });\r\n\r\n    setTimeout(() => {\r\n      this.props.onAddContact({ name, number });\r\n\r\n      this.setState({ disabled: false });\r\n    }, 500);\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, number, disabled } = this.state;\r\n\r\n    return (\r\n      <FormBlock onSubmit={this.handleSubmit}>\r\n        <Label>\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Number\r\n          <Input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Label>\r\n        <Button type=\"submit\" disabled={disabled}>\r\n          Add contact\r\n        </Button>\r\n      </FormBlock>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const ContactBlock = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ContactName = styled.span`\r\n  flex: 1 0 auto;\r\n`;\r\n\r\nexport const ContactNumber = styled.span`\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const ContactButtonDelete = styled.button`\r\n  display: block;\r\n  padding: 5px 10px;\r\n  font-weight: 400;\r\n  color: #fff;\r\n  background-color: rgb(218, 1, 1);\r\n  border: none;\r\n  border-radius: 4px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: rgb(170, 0, 0);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ContactBlock,\r\n  ContactName,\r\n  ContactNumber,\r\n  ContactButtonDelete,\r\n} from './Contact.styled';\r\n\r\nconst Contact = ({ name, number, onDeleteContact }) => {\r\n  return (\r\n    <ContactBlock>\r\n      <ContactName>Name: {name}</ContactName>\r\n      <ContactNumber>Number: {number}</ContactNumber>\r\n      <ContactButtonDelete type=\"button\" onClick={onDeleteContact}>\r\n        Delete\r\n      </ContactButtonDelete>\r\n    </ContactBlock>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  padding: 10px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from '../Contact/Contact';\r\nimport { List, Item } from './ContactList.styled';\r\n\r\nconst ContactList = ({ items, onDeleteContact }) =>\r\n  items.length > 0 && (\r\n    <List>\r\n      {items.map(item => (\r\n        <Item key={item.id}>\r\n          <Contact {...item} onDeleteContact={() => onDeleteContact(item.id)} />\r\n        </Item>\r\n      ))}\r\n    </List>\r\n  );\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from 'styled-components';\r\n\r\nexport const FilterBlock = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  padding: 10px 10px 15px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-family: sans-serif;\r\n  font-size: 16px;\r\n  line-height: 1.2;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 8px 5px;\r\n  border-radius: 4px;\r\n  border: 3px solid rgb(120, 120, 120);\r\n\r\n  :focus {\r\n    border-color: rgb(0, 106, 177);\r\n    outline: none;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FilterBlock, Label, Input } from './FilterValue.styled';\r\n\r\nconst FilterValue = ({ value, onChangeFilter }) => (\r\n  <FilterBlock>\r\n    <Label>Find contacts by name</Label>\r\n    <Input type=\"text\" value={value} onChange={onChangeFilter} />\r\n  </FilterBlock>\r\n);\r\n\r\nFilterValue.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FilterValue;\r\n","const findContactsItem = (contacts, contact) =>\r\n  contacts.find(item => item.name === contact.name);\r\n\r\nexport default findContactsItem;\r\n","const filterContacts = (contacts, filter) =>\r\n  contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\nexport default filterContacts;\r\n","import styled from 'styled-components';\r\n\r\nexport const AppBlock = styled.div`\r\n  max-width: 420px;\r\n  min-width: 310px;\r\n  margin: 0 auto;\r\n  padding: 0 5px;\r\n`;\r\n\r\nexport const AppMainTitle = styled.h1`\r\n  font-size: 30px;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport const AppTitle = styled.h2`\r\n  font-size: 20px;\r\n  line-height: 1.2;\r\n`;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport FilterValue from './Components/Filter/FilterValue';\nimport findContactsItem from './Components/Filter/findContactsItem';\nimport filterContacts from './Components/Filter/filterContacts';\nimport { AppBlock, AppMainTitle, AppTitle } from './App.styled';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  changeFilter = e => {\n    const value = e.target.value;\n    this.setState({ filter: value });\n  };\n\n  addContact = contact => {\n    const { contacts } = this.state;\n    const contactToAdd = {\n      ...contact,\n      id: uuidv4(),\n    };\n\n    if (this.isValidContact(contact)) {\n      const stateContact = findContactsItem(contacts, contact);\n      if (stateContact) {\n        alert(`${contact.name} is already in contacts.`);\n        return;\n      }\n\n      this.setState(state => ({\n        contacts: [...state.contacts, contactToAdd],\n      }));\n    }\n  };\n\n  isValidContact = ({ name, number }) => {\n    if (name.length <= 1 || name.trim() === 0) {\n      alert(`Your name is not valid. Please enter correct information.`);\n      return false;\n    }\n\n    if (!number.match(/^\\(?([0-9]{3})\\)?[- ]?([0-9]{2})[- ]?([0-9]{2})$/)) {\n      alert(`Your number in not valid. Please enter correct information.`);\n      return false;\n    }\n    return true;\n  };\n\n  deleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const filteredContacts = filterContacts(contacts, filter);\n\n    return (\n      <AppBlock>\n        <AppMainTitle>Phonebook</AppMainTitle>\n        <ContactForm onAddContact={this.addContact} />\n\n        <AppTitle>Contacts</AppTitle>\n        {contacts.length >= 2 && (\n          <FilterValue value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        <ContactList\n          items={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </AppBlock>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}